/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.serverapp;

import java.io.IOException;

import java.sql.SQLException;
import java.util.Timer;
import java.util.TimerTask;

import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.application.Platform.exit;

import org.json.JSONException;

/**
 *
 * @author Hans
 */
public class ServerGUI extends javax.swing.JFrame {

    /**
     * Creates new form serverGUI
     */
    private boolean autoUpdate;
    int weatherUpdateCount = 0;
    public int tweetUpdateCount = 0;
    
    TimerTask hourlyTask = new TimerTask() {
        @Override
        public void run() {
            GetWeather gw = new GetWeather();

        }
    };

    public ServerGUI() {
        initComponents();
    }

    
    
   TimerTask fiveMinTask = new TimerTask() {
            @Override
            public void run() {
                try {
                    
                    GetTwitter gt = new GetTwitter();
                    tweetLabel.setText("Updated " + tweetUpdateCount + " tweets");

                } catch (SQLException ex) {
                    System.out.println("Auto update twitter crash!");

                }

            }
        };
    
    
    
    

    
    {
        
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        weatherButton = new javax.swing.JButton();
        autoupdateButton = new javax.swing.JButton();
        tweetLabel = new javax.swing.JLabel();
        weatherLabel = new javax.swing.JLabel();
        autoUpdateLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        weatherButton.setText("Update weather");
        weatherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weatherButtonActionPerformed(evt);
            }
        });

        autoupdateButton.setText("Start auto-update");
        autoupdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoupdateButtonActionPerformed(evt);
            }
        });

        tweetLabel.setText("Updated 0 tweets");
        tweetLabel.setToolTipText("");

        weatherLabel.setText("Updated weather 0 times");

        autoUpdateLabel.setText("Auto update not running");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(weatherButton)
                    .addComponent(weatherLabel))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(tweetLabel)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(autoUpdateLabel)
                    .addComponent(autoupdateButton))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tweetLabel)
                    .addComponent(weatherLabel)
                    .addComponent(autoUpdateLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weatherButton)
                    .addComponent(autoupdateButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void autoupdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoupdateButtonActionPerformed
        try {
            //TODO catch connection problem to the server.
            //TODO Exception in thread "AWT-EventQueue-0" java.lang.IllegalStateException: Task already scheduled or cancelled
            if (autoUpdate == false) {
                GetTwitter gt = new GetTwitter();
                tweetLabel.setText("Updated " + tweetUpdateCount + " tweets");
                autoUpdateLabel.setText("AutoUpdate is running");
                
                Timer timer = new Timer();
                timer.schedule(hourlyTask, 0l, 1000 * 60 * 60);
                timer.schedule(fiveMinTask, 0l, 1000 * 60 * 5);
                autoupdateButton.setText("Restart application");
                autoUpdate = true;
                
            } else {
                
                autoUpdateLabel.setText("AutoUpdate is not running");
                
                autoUpdate = false;
                ServerGUI s = new ServerGUI();
                s.setVisible(true);
                exit();
            }
        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_autoupdateButtonActionPerformed

    private void weatherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weatherButtonActionPerformed
        GetWeather gw = new GetWeather();

        weatherUpdateCount++;

        weatherLabel.setText("Updated weather " + weatherUpdateCount + " times");
    }//GEN-LAST:event_weatherButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        ServerGUI s = new ServerGUI();
        s.show();
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel autoUpdateLabel;
    private javax.swing.JButton autoupdateButton;
    private static javax.swing.JLabel tweetLabel;
    private javax.swing.JButton weatherButton;
    private javax.swing.JLabel weatherLabel;
    // End of variables declaration//GEN-END:variables
}
